# Управление событиями

import random
import time

# Глобальные переменные для времени и погоды
current_time = "день"  # Может быть "день" или "ночь"
current_weather = "ясно"  # Может быть "ясно", "дождь", "снег" и т.д.

def manage_events():
    global current_time, current_weather

    # Пример функции для случайного события
    def random_event(gender, name):
        global reputation, current_time, current_weather

        # Динамические события
        dynamic_events = {
            ("день", "ясно"): ["Вы нашли кошелек на улице.", "Вы встретили старого друга.", "Вы увидели редкую птицу."],
            ("день", "дождь"): ["Вы нашли зонтик на улице.", "Вы помогли кому-то укрыться от дождя.", "Вы нашли потерявшегося котенка."],
            ("ночь", "ясно"): ["Вы увидели падающую звезду.", "Вы встретили ночного гуляку.", "Вы нашли старинную монету."],
            ("ночь", "дождь"): ["Вы помогли кому-то найти дорогу домой.", "Вы нашли потерявшегося щенка.", "Вы увидели таинственный свет."]
        }

        # Редкие события
        rare_events = [
            "Вы нашли древний артефакт на улице.",
            "Вы стали свидетелем НЛО.",
            "Вы встретили знаменитость.",
            "Вы нашли карту сокровищ."
        ]

        # Выбор события
        event = None
        if random.random() < 0.1:  # 10% вероятность редкого события
            event = random.choice(rare_events)
        else:
            event = random.choice(dynamic_events.get((current_time, current_weather), ["Стандартное событие"]))

        print("\nСлучайное событие:")
        print(event)

        if event == "Вы нашли кошелек на улице.":
            print("1. Вернуть кошелек владельцу")
            print("2. Оставить кошелек себе")
            print("3. Отнести кошелек в полицию")
            choice = input("Введите номер выбора: ")
            if choice == "1":
                print("Вы нашли владельца кошелька и вернули его. Владелец благодарит вас и предлагает дружбу.")
                manage_reputation.update_relationship("Алекс", 2)
                manage_achievements.unlock_achievement("Скрытый герой")
            elif choice == "2":
                print("Вы оставили кошелек себе. Возможно, это было не самое честное решение.")
                manage_reputation.update_relationship("Алекс", -1)
            elif choice == "3":
                print("Вы отнесли кошелек в полицию. Это честное решение, но владелец может и не узнать о вашем поступке.")

        elif event == "Вы нашли карту сокровищ.":
            print("1. Исследовать карту самостоятельно")
            print("2. Поделиться картой с другом")
            print("3. Продать карту коллекционеру")
            choice = input("Введите номер выбора: ")
            if choice == "1":
                print("Вы решили исследовать карту самостоятельно. Это может привести к приключениям!")
                manage_achievements.unlock_achievement("Искатель приключений")
            elif choice == "2":
                print("Вы поделились картой с другом. Вместе вы можете найти сокровище!")
                manage_relationships.update_relationship("Алекс", 2)  # Пример улучшения отношений
            elif choice == "3":
                print("Вы продали карту коллекционеру. Это принесло вам прибыль, но вы упустили шанс на приключение.")
                manage_reputation.update_relationship("Алекс", 1)

        wait(2)
        main_menu(gender, name)

    # Пример функции для ожидания
    def wait(seconds):
        time.sleep(seconds)
